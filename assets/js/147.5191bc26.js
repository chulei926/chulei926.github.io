(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{512:function(s,t,n){"use strict";n.r(t);var a=n(22),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"配置-http"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置-http"}},[s._v("#")]),s._v(" 配置-http")]),s._v(" "),n("div",{staticClass:"language-nginx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设定http服务器，利用它的反向代理功能提供负载均衡支持")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("http")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件扩展名与文件类型映射表")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),s._v(" mime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("types")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认文件类型：二进制")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default_type")]),s._v(" application"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("octet"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("stream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认编码")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("charset")]),s._v(" utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务器名字的 hash表 大小")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保存服务器名字的hash表是由指令 server_names_hash_max_size 和 server_names_hash_bucket_size 所控制的。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 参数hash bucket size总是等于hash表的大小，并且是一路处理器缓存大小的倍数。在减少了在内存中的存取次数后，使在处理器中加速查找hash表键值成为可能。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果hash bucket size等于一路处理器缓存的大小，那么在查找键的时候，最坏的情况下在内存中查找的次数为2。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一次是确定存储单元的地址，第二次是在存储单元中查找键 值。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 因此，如果Nginx给出需要增大hash max size 或 hash bucket size的提示，那么首要的是增大前一个参数的大小.")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server_names_hash_bucket_size")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 客户端请求头部的缓冲区大小。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这个可以根据你的系统分页大小来设置，一般一个请求的头部大小不会超过1k，")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不过由于一般系统分页都要大于1k，所以这里设置为分页大小。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 分页大小可以用命令getconf PAGESIZE取得。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("client_header_buffer_size")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 客户请求头缓冲大小。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nginx默认会用 client_header_buffer_size 这个buffer来读取header值，如果header过大，它会使用large_client_header_buffers来读取。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("large_client_header_buffers")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设定通过nginx上传文件的大小")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("client_max_body_size")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启高效文件传输模式")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sendfile指令指定nginx是否调用sendfile函数（zero copy 方式）来输出文件，对于普通应用设为 on，")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意：如果图片显示不正常把这个改成off。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sendfile")]),s._v(" on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启目录列表访问，合适下载服务器，默认关闭。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("autoindex")]),s._v(" on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此选项允许或禁止使用socke的 TCP_CORK 的选项，此选项仅在使用sendfile的时候使用")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tcp_nopush")]),s._v(" on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tcp_nodelay")]),s._v(" on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 长连接超时时间，单位是秒")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("keepalive_timeout")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("120")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_connect_timeout")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_send_timeout")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_read_timeout")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_buffer_size")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v("M"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_buffers")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("M"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_busy_buffers_size")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v("M"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_temp_file_write_size")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("256")]),s._v("M"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gzip模块设置")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip")]),s._v(" on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启gzip压缩输出")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_min_length")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最小压缩文件大小")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_buffers")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 压缩缓冲区")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_http_version")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 压缩版本（默认1.1，前端如果是squid2.5请使用1.0）")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_comp_level")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 压缩等级")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_types")]),s._v(" text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("plain application"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("x"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("javascript text"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("css application"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("xml"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 压缩类型，默认就已经包含textml，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_vary")]),s._v(" on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nginx 限制连接模块")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit_zone")]),s._v(" crawler "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$binary_remote_addr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit_req_zone")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$binary_remote_addr")]),s._v(" zone"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("allips"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("m rate"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1300")]),s._v("r"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#负载均衡配置")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("upstream")]),s._v(" piao"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#虚拟主机的配置")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br")])]),n("h3",{attrs:{id:"_1-mime-types"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-mime-types"}},[s._v("#")]),s._v(" 1 mime.types")]),s._v(" "),n("h4",{attrs:{id:"_1-1-mime-type-和-content-type-的关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-mime-type-和-content-type-的关系"}},[s._v("#")]),s._v(" 1.1 MIME-type 和 Content-Type 的关系？")]),s._v(" "),n("p",[s._v("当web服务器收到静态的资源文件请求时，依据请求文件的后缀名在服务器的MIME配置文件中找到对应的MIME Type，再根据MIME Type设置HTTP Response的Content-Type，然后浏览器根据Content-Type的值处理文件。")]),s._v(" "),n("h4",{attrs:{id:"_1-2-原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-原理"}},[s._v("#")]),s._v(" 1.2 原理")]),s._v(" "),n("p",[s._v("在浏览器中显示的内容有 HTML、有 XML、有 GIF、还有 Flash ... 浏览器是如何区分它们，决定什么内容用什么形式来显示呢？答案是 MIME Type，也就是该资源的媒体类型。"),n("br"),s._v("\n媒体类型通常是通过 HTTP 协议，由 Web 服务器告知浏览器的，更准确地说，是通过 Content-Type 来表示的。例如:"),n("br"),s._v(" "),n("strong",[s._v("Content-Type: text/HTML")]),s._v("  表示内容是 text/HTML 类型，也就是超文本文件。"),n("br"),s._v("\n为什么是“text/HTML”而不是“HTML/text”或者别的什么？MIME Type 不是个人指定的，是经过 ietf 组织协商，以 RFC 的形式作为建议的标准发布在网上的，大多数的 Web 服务器和用户代理都会支持这个规范 (顺便说一句，Email 附件的类型也是通过 MIME Type 指定的)。"),n("br"),s._v("\n通常只有一些在互联网上获得广泛应用的格式才会获得一个 MIME Type，如果是某个客户端自己定义的格式，一般只能以 application/x- 开头。"),n("br"),s._v("\nXHTML 正是一个获得广泛应用的格式，因此，在 RFC 3236 中，说明了 XHTML 格式文件的 MIME Type 应该是 application/xHTML+XML。"),n("br"),s._v("\n当然，处理本地的文件，在没有人告诉浏览器某个文件的 MIME Type 的情况下，浏览器也会做一些默认的处理，这可能和你在操作系统中给文件配置的 MIME Type 有关。比如在 Windows下，打开注册表的"),n("code",[s._v("HKEY_LOCAL_MACHINESOFTWAREClassesMIMEDatabaseContent Type")]),s._v("主键，你可以看到所有 MIME Type 的配置信息。")]),s._v(" "),n("h3",{attrs:{id:"_2-http限制连接模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-http限制连接模块"}},[s._v("#")]),s._v(" 2 HTTP限制连接模块")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html#limit_conn_zone",target:"_blank",rel:"noopener noreferrer"}},[s._v("ngx_http_limit_conn_module"),n("OutboundLink")],1)]),s._v(" "),n("h4",{attrs:{id:"_2-1-limit-conn-zone-ngx-http-limit-conn-module-限制一个客户端的并发连接数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-limit-conn-zone-ngx-http-limit-conn-module-限制一个客户端的并发连接数"}},[s._v("#")]),s._v(" 2.1 limit_conn_zone（ngx_http_limit_conn_module） 限制一个客户端的并发连接数")]),s._v(" "),n("blockquote",[n("p",[s._v("语法：limit_conn_zone key zone=name:size;")])]),s._v(" "),n("h5",{attrs:{id:"原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理：")]),s._v(" "),n("div",{staticClass:"language-nginx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("http")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义了一个 myconn 缓冲区（容器）")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit_conn_zone")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$binary_remote_addr")]),s._v(" zone"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("myconn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("m"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("listen")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("70")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每个 IP 只允许一个连接")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit_conn")]),s._v(" myconn "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制传输速度（如果有N个并发连接，则是 N * limit_rate）")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit_rate")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v("k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_pass")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("http")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("localhost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7070")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# limit_conn_zone 只能配置在 http 范围内；")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $binary_remote_addr 表示客户端请求的IP地址；binary_remote_addr 是一种key，表示基于 remote_addr(客户端IP) 来做限流，binary_ 的目的是压缩内存占用量。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# myconn 自己定义的变量名（缓冲区）；")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# limit_rate 限制传输速度")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# limit_conn 与 limit_conn_zone 对应，限制网络连接数")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h4",{attrs:{id:"_2-2-limit-req-zone-ngx-http-limit-req-module-限制-用户的连接频率"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-limit-req-zone-ngx-http-limit-req-module-限制-用户的连接频率"}},[s._v("#")]),s._v(" 2.2 limit_req_zone（ngx_http_limit_req_module）  限制 用户的连接频率")]),s._v(" "),n("blockquote",[n("p",[s._v("语法：limit_req_zone key zone=name:size rate=rate;")])]),s._v(" "),n("h5",{attrs:{id:"原理-基于漏桶算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原理-基于漏桶算法"}},[s._v("#")]),s._v(" 原理：基于漏桶算法")]),s._v(" "),n("div",{staticClass:"language-nginx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-nginx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("http")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义了一个 mylimit 缓冲区（容器），请求频率为每秒 1 个请求（nr/s）")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit_req_zone")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$binary_remote_addr")]),s._v(" zone"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mylimit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("m rate"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("r"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("listen")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("70")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nodelay 不延迟处理")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# burst 是配置超额处理,可简单理解为队列机制")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 上面配置同一个 IP 没秒只能发送一次请求（1r/s），这里配置了缓存3个请求，")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 就意味着同一秒内只能允许 4 个任务响应成功，其它任务请求则失败（503错误）")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit_req")]),s._v(" zone"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mylimit burst"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" nodelay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_pass")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("http")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("localhost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7070")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# limit_req_zone 只能配置在 http 范围内；")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $binary_remote_addr 表示客户端请求的IP地址；")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mylimit 自己定义的变量名；")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rate 请求频率，每秒允许多少请求；")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# limit_req 与 limit_req_zone 对应，burst 表示缓存住的请求数，也就是任务队列。")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h4",{attrs:{id:"_2-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3"}},[s._v("#")]),s._v(" 2.3")])])}),[],!1,null,null,null);t.default=e.exports}}]);