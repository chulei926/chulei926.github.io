(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{528:function(t,n,a){"use strict";a.r(n);var h=a(22),r=Object(h.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("h2",{attrs:{id:"python的介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python的介绍"}},[t._v("#")]),t._v(" Python的介绍")]),t._v(" "),a("h3",{attrs:{id:"python是解释型语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python是解释型语言"}},[t._v("#")]),t._v(" Python是解释型语言")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("Python（英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/），是一种广泛使用的高级编程语言，属于通用型编程语言，由吉多·范罗苏姆创造。\n第一版发布于1991年。\n可以视之为一种改良（加入一些其他编程语言的优点，如面向对象）的LISP。\n作为一种解释型语言，Python的设计哲学强调代码的可读性和简洁的语法（尤其是使用空格缩进划分代码块，而非使用大括号或者关键词）。\n相比于C++或Java，Python让开发者能够用更少的代码表达想法。\n不管是小型还是大型程序，该语言都试图让程序的结构清晰明了。 \n\nLife is short you need Python （人生苦短，我用Python）    \n\nPython的用途：\n    WEB应用\n        Facebook 豆瓣 。。。\n    爬虫程序\n    科学计算\n    自动化运维\n    大数据（数据清洗）\n    云计算\n    桌面软件/游戏\n    人工智能\n    。。。     \n")])])]),a("h2",{attrs:{id:"python开发环境搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python开发环境搭建"}},[t._v("#")]),t._v(" Python开发环境搭建")]),t._v(" "),a("h3",{attrs:{id:"开发环境搭建就是安装python的解释器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发环境搭建就是安装python的解释器"}},[t._v("#")]),t._v(" 开发环境搭建就是安装Python的解释器")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('Python的解释器分类：\n    CPython（官方）\n        用c语言编写的Python解释器\n    PyPy\n        用Python语言编写的Python解释器\n    IronPython\n        用.net编写的Python解释器\n    Jython\n        用Java编写的Python解释器\n\n步骤：\n    1. 下载安装包 python-3.6.5.exe\n        - 3.x\n        - 2.x    \n    2. 安装（傻瓜式安装） \n    3. 打开命令行窗口，输入python 出现如下内容\n        Python 3.6.5 (v3.6.5:f59c0932b4, Mar 28 2018, 16:07:46) [MSC v.1900 32 bit (Intel)] on win32\n        Type "help", "copyright", "credits" or "license" for more information.\n        >>> \n')])])]),a("h2",{attrs:{id:"基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),a("h3",{attrs:{id:"_1-在python中严格区分大小写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-在python中严格区分大小写"}},[t._v("#")]),t._v(" 1. 在Python中严格区分大小写")]),t._v(" "),a("h3",{attrs:{id:"_2-python中的每一行就是一条语句-每条语句以换行结束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-python中的每一行就是一条语句-每条语句以换行结束"}},[t._v("#")]),t._v(" 2. Python中的每一行就是一条语句，每条语句以换行结束")]),t._v(" "),a("h3",{attrs:{id:"_3-python中每一行语句不要过长-规范中建议每行不要超过80个字符-rulers-80"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-python中每一行语句不要过长-规范中建议每行不要超过80个字符-rulers-80"}},[t._v("#")]),t._v(' 3. Python中每一行语句不要过长（规范中建议每行不要超过80个字符） "rulers":[80],')]),t._v(" "),a("h3",{attrs:{id:"_4-一条语句可以分多行编写-多行编写时语句后边以-结尾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-一条语句可以分多行编写-多行编写时语句后边以-结尾"}},[t._v("#")]),t._v(" 4. 一条语句可以分多行编写，多行编写时语句后边以\\结尾")]),t._v(" "),a("h3",{attrs:{id:"_5-python是缩进严格的语言-所以在python中不要随便写缩进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-python是缩进严格的语言-所以在python中不要随便写缩进"}},[t._v("#")]),t._v(" 5. Python是缩进严格的语言，所以在Python中不要随便写缩进")]),t._v(" "),a("h3",{attrs:{id:"_6-在python中使用-来表示注释-后的内容都属于注释-注释的内容将会被解释器所忽略我们可以通过注释来对程序进行解释说明-一定要养成良好的编写注释的习惯。注释要求简单明了-一般习惯上-后边会跟着一个空格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-在python中使用-来表示注释-后的内容都属于注释-注释的内容将会被解释器所忽略我们可以通过注释来对程序进行解释说明-一定要养成良好的编写注释的习惯。注释要求简单明了-一般习惯上-后边会跟着一个空格"}},[t._v("#")]),t._v(" 6. 在Python中使用#来表示注释，#后的内容都属于注释，注释的内容将会被解释器所忽略我们可以通过注释来对程序进行解释说明，一定要养成良好的编写注释的习惯。注释要求简单明了，一般习惯上#后边会跟着一个空格")])])}),[],!1,null,null,null);n.default=r.exports}}]);