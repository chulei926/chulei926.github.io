(window.webpackJsonp=window.webpackJsonp||[]).push([[172],{534:function(s,a,e){"use strict";e.r(a);var t=e(22),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"条件判断语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#条件判断语句"}},[s._v("#")]),s._v(" 条件判断语句")]),s._v(" "),e("h2",{attrs:{id:"if语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#if语句"}},[s._v("#")]),s._v(" if语句")]),s._v(" "),e("ul",[e("li",[s._v("语法：")])]),s._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" 条件表达式 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n    代码块\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("执行的流程：\n"),e("ul",[e("li",[s._v("if语句在执行时，会先对条件表达式进行求值判断，")]),s._v(" "),e("li",[s._v("如果为True，则执行if后的语句")]),s._v(" "),e("li",[s._v("如果为False，则不执行")])])])]),s._v(" "),e("p",[s._v("默认情况下，if 语句只会控制紧随其后的那条语句，如果希望 if 可以控制多条语句 则可以在 if 后跟着一个代码块。")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("代码块")]),s._v(" "),e("ul",[e("li",[s._v("代码块中保存着一组代码，同一个代码块中的代码，要么都执行要么都不执行")]),s._v(" "),e("li",[s._v("代码块就是一种为代码分组的机制")]),s._v(" "),e("li",[s._v("如果要编写代码块，语句就不能紧随在:后边，而是要写在下一行")]),s._v(" "),e("li",[s._v("代码块以缩进开始，直到代码恢复到之前的缩进级别时结束")])])]),s._v(" "),e("li",[e("p",[s._v("缩进有两种方式，一种是使用tab键，一种是使用空格（四个）")]),s._v(" "),e("ul",[e("li",[s._v("Python的官方文档中推荐我们使用空格来缩进")]),s._v(" "),e("li",[s._v("Python代码中使用的缩进方式必须统一")])]),s._v(" "),e("p",[e("code",[s._v("if False : print('你猜我出来么？')")])])])]),s._v(" "),e("h2",{attrs:{id:"if-else语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#if-else语句"}},[s._v("#")]),s._v(" if-else语句")]),s._v(" "),e("ul",[e("li",[s._v("语法：")])]),s._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" 条件表达式 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    代码块\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    代码块\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ul",[e("li",[s._v("执行流程：\n"),e("ul",[e("li",[s._v("if-else语句在执行时，先对if后的条件表达式进行求值判断")]),s._v(" "),e("li",[s._v("如果为True，则执行if后的代码块")]),s._v(" "),e("li",[s._v("如果为False，则执行else后的代码块")])])])]),s._v(" "),e("h2",{attrs:{id:"if-elif-else语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#if-elif-else语句"}},[s._v("#")]),s._v(" if-elif-else语句")]),s._v(" "),e("ul",[e("li",[s._v("语法：")])]),s._v(" "),e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" 条件表达式 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    代码块\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" 条件表达式 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    代码块\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" 条件表达式 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    代码块\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" 条件表达式 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    代码块\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    代码块\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("ul",[e("li",[s._v("执行流程：\n"),e("ul",[e("li",[s._v("if-elif-else语句在执行时，会自上向下依次对条件表达式进行求值判断，")]),s._v(" "),e("li",[s._v("如果表达式的结果为True，则执行当前代码块，然后语句结束")]),s._v(" "),e("li",[s._v("如果表达式的结果为False，则继续向下判断，直到找到True为止")]),s._v(" "),e("li",[s._v("如果所有的表达式都是False，则执行else后的代码块")]),s._v(" "),e("li",[s._v("if-elif-else中只会有一个代码块会执行")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);