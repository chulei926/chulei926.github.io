(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{400:function(v,a,_){"use strict";_.r(a);var t=_(22),i=Object(t.a)({},(function(){var v=this,a=v.$createElement,_=v._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"java虚拟机"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#java虚拟机"}},[v._v("#")]),v._v(" Java虚拟机")]),v._v(" "),_("h2",{attrs:{id:"概述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[v._v("#")]),v._v(" 概述")]),v._v(" "),_("ul",[_("li",[v._v("内存与垃圾回收\n"),_("ul",[_("li",[v._v("JVM与java体系结构")]),v._v(" "),_("li",[v._v("类加载子系统")]),v._v(" "),_("li",[v._v("运行时数据区概述及线程")]),v._v(" "),_("li",[v._v("程序计数器")]),v._v(" "),_("li",[v._v("虚拟机栈")]),v._v(" "),_("li",[v._v("本地方法接口")]),v._v(" "),_("li",[v._v("本地方法栈")]),v._v(" "),_("li",[v._v("堆")]),v._v(" "),_("li",[v._v("方法区")]),v._v(" "),_("li",[v._v("直接内存")]),v._v(" "),_("li",[v._v("执行引擎")]),v._v(" "),_("li",[v._v("StringTable")]),v._v(" "),_("li",[v._v("垃圾回收器概述")]),v._v(" "),_("li",[v._v("垃圾回收器相关算法")]),v._v(" "),_("li",[v._v("垃圾回收器相关概念")]),v._v(" "),_("li",[v._v("垃圾回收器")])])]),v._v(" "),_("li",[v._v("字节码与类加载")]),v._v(" "),_("li",[v._v("性能监控与调优")]),v._v(" "),_("li",[v._v("面试")])]),v._v(" "),_("h2",{attrs:{id:"简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[v._v("#")]),v._v(" 简介")]),v._v(" "),_("ul",[_("li",[v._v("Java虚拟机是一台执行Java字节码的虚拟计算机，它拥有独立的运行机制，其运行的Java字节码也未必由Java语言编译而成。")]),v._v(" "),_("li",[v._v("JVM平台的各种语言可以共享Java虚拟机带来的跨平台性、优秀的垃圾回收器，以及可靠的即时编译器。")]),v._v(" "),_("li",[v._v("Java技术的核心就是Java虚拟机，因为所有的Java程序都运行在Java虚拟机内部。")])]),v._v(" "),_("h2",{attrs:{id:"作用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[v._v("#")]),v._v(" 作用")]),v._v(" "),_("p",[_("strong",[v._v("Java虚拟机就是二进制字节码的运行环境")]),v._v("，负责装载字节码到其内部，解释/编译为对应平台上的机器指令执行。每一条Java指令，Java虚拟机规范中都有详细定义，如怎么取操作数，怎么处理操作数，处理结果放在哪里。")]),v._v(" "),_("h2",{attrs:{id:"特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[v._v("#")]),v._v(" 特点")]),v._v(" "),_("ul",[_("li",[v._v("一次编译，到处运行")]),v._v(" "),_("li",[v._v("自动内存管理")]),v._v(" "),_("li",[v._v("自动垃圾回收功能")])]),v._v(" "),_("h2",{attrs:{id:"jvm-位置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#jvm-位置"}},[v._v("#")]),v._v(" JVM 位置")]),v._v(" "),_("p",[_("img",{attrs:{src:"/images/jvm/JVM%E4%BD%8D%E7%BD%AE.png",alt:"JVM位置"}})]),v._v(" "),_("p",[v._v("特点：")]),v._v(" "),_("ol",[_("li",[v._v("方法区和堆是多个线程共享的")]),v._v(" "),_("li",[v._v("java栈（虚拟机栈）、本地方法栈、程序计数器是每个线程独有一份")])]),v._v(" "),_("h2",{attrs:{id:"jvm-架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#jvm-架构"}},[v._v("#")]),v._v(" JVM 架构")]),v._v(" "),_("p",[_("img",{attrs:{src:"/images/jvm/jvm%E6%9E%B6%E6%9E%84.png",alt:"jvm架构"}})])])}),[],!1,null,null,null);a.default=i.exports}}]);